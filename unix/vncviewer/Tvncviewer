!
! Application defaults file for the TurboVNC Viewer
!


!
! The title of the main window.  "%s" will be replaced by the desktop name.
!

Tvncviewer.title: %s


!
! Translations on the main window
!

Tvncviewer.translations:\
  <Enter>: SelectionToVNC()\n\
  <Leave>: SelectionFromVNC()


!
! Background color to use in full-screen mode if the remote desktop size is
! smaller than the local desktop size
!

*form.background: black


!
! If the remote desktop size exceeds the local desktop size, use scrollbars on
! the right and bottom of the window.
!

*viewport.allowHoriz: True
*viewport.allowVert: True
*viewport.useBottom: True
*viewport.useRight: True
*viewport*Scrollbar*thumb: None
*viewport*Scrollbar.translations: #override\n\
  <Btn1Down>: StartScroll(Continuous) MoveThumb() NotifyThumb()\n\
  <Btn1Motion>: MoveThumb() NotifyThumb()\n\
  <Btn3Down>: StartScroll(Continuous) MoveThumb() NotifyThumb()\n\
  <Btn3Motion>: MoveThumb() NotifyThumb()


!
! Default translations on desktop window
!

*desktop.baseTranslations:\
  <Key>F8: ShowPopup()\n\
  Ctrl Alt Shift <Key>F: ToggleFullScreen()\n\
  Ctrl Alt Shift <Key>G: ToggleGrabKeyboard()\n\
  Ctrl Alt Shift <Key>L: LosslessRefresh()\n\
  Ctrl Alt Shift <Key>R: SendRFBEvent(fbupdate)\n\
  <ButtonPress>: SendRFBEvent()\n\
  <ButtonRelease>: SendRFBEvent()\n\
  <Motion>: SendRFBEvent()\n\
  <KeyPress>: SendRFBEvent()\n\
  <KeyRelease>: SendRFBEvent()


!
! Dialog boxes
!

*serverDialog.title: New TurboVNC Connection
*serverDialog.dialog.label: VNC server:
*serverDialog.dialog.value:
*serverDialog.dialog.value.translations: #override\n\
  <Key>Return: ServerDialogDone()

*passwordDialog.title: Standard VNC Authentication
*passwordDialog.dialog.label: Password:
*passwordDialog.dialog.value:
*passwordDialog.dialog.value.AsciiSink.echo: False
*passwordDialog.dialog.value.translations: #override\n\
  <Key>Return: PasswordDialogDone()

*userPwdDialog.title: Unix Login Authentication
*userPwdDialog.form.background: grey
*userPwdDialog.form.resizable: true

*userPwdDialog*userLabel.label: User:

*userPwdDialog*userField.editType: edit
*userPwdDialog*userField.fromHoriz: userLabel
*userPwdDialog*userField.resize: width
*userPwdDialog*userField.textSource.editType: edit
*userPwdDialog*userField.textSource.string:
*userPwdDialog*userField.translations: #override\n\
  <Btn1Down>,<Btn1Up>: UserPwdSetFocus()\n\
  Ctrl<Key>O:    Nothing()\n\
  Meta<Key>I:    Nothing()\n\
  Ctrl<Key>N:    Nothing()\n\
  Ctrl<Key>P:    Nothing()\n\
  Ctrl<Key>Z:    Nothing()\n\
  Meta<Key>Z:    Nothing()\n\
  Ctrl<Key>V:    Nothing()\n\
  Meta<Key>V:    Nothing()\n\
  <Key>Tab: UserPwdNextField()\n\
  Ctrl<Key>J: UserPwdNextField()\n\
  Ctrl<Key>M: UserPwdNextField()\n\
  <Key>Linefeed: UserPwdNextField()\n\
  <Key>Return: UserPwdNextField()

*userPwdDialog*pwdLabel.label: Password:
*userPwdDialog*pwdLabel.fromVert: userLabel

*userPwdDialog*pwdField.editType: edit
*userPwdDialog*pwdField.fromHoriz: pwdLabel
*userPwdDialog*pwdField.fromVert: userField
*userPwdDialog*pwdField.resize: width
*userPwdDialog*pwdField.textSink.echo: False
*userPwdDialog*pwdField.textSource.editType: edit
*userPwdDialog*pwdField.textSource.string:
*userPwdDialog*pwdField.translations: #override\n\
  <Btn1Down>,<Btn1Up>: UserPwdSetFocus()\n\
  Ctrl<Key>O:    Nothing()\n\
  Meta<Key>I:    Nothing()\n\
  Ctrl<Key>N:    Nothing()\n\
  Ctrl<Key>P:    Nothing()\n\
  Ctrl<Key>Z:    Nothing()\n\
  Meta<Key>Z:    Nothing()\n\
  Ctrl<Key>V:    Nothing()\n\
  Meta<Key>V:    Nothing()\n\
  <Key>Tab: UserPwdNextField()\n\
  Ctrl<Key>J: UserPwdDialogDone()\n\
  Ctrl<Key>M: UserPwdDialogDone()\n\
  <Key>Linefeed: UserPwdDialogDone()\n\
  <Key>Return: UserPwdDialogDone()


!
! Popup window appearance
!

*qualLabel.label: JPEG Image Quality
*qualLabelLo.label: poor
*qualLabelHi.label: best
*qualBar.length: 100
*qualBar.width: 130
*qualBar.orientation: horizontal
*qualBar.translations: #override\n\
  <Btn1Down>: StartScroll(Continuous) MoveThumb() NotifyThumb()\n\
  <Btn1Motion>: MoveThumb() NotifyThumb()\n\
  <Btn3Down>: StartScroll(Continuous) MoveThumb() NotifyThumb()\n\
  <Btn3Motion>: MoveThumb() NotifyThumb()

*qualText.label: 000

*subsampLabel.label: JPEG Chrominance Subsampling
*subsampLabelLo.label: fast
*subsampLabelHi.label: best
*subsampGray.label: Grayscale
*subsamp4X.label: 4X
*subsamp2X.label: 2X
*subsamp1X.label: None

*enableJPEG.label: Enable JPEG Compression

*zlibCompressLabel.label: Zlib Compression Level
*compressLabel.label: Compression Level
*compressLabelLo.label: fast
*compressLabelHi.label: best

*popup.title: TurboVNC Viewer Options
*popup*background: grey
*popup*font: -*-helvetica-bold-r-*-*-16-*-*-*-*-*-*-*
*popup.buttonForm.Command.borderWidth: 0
*popup.buttonForm.Toggle.borderWidth: 0


!
! Translations on popup window
!

*popup.translations: #override <Message>WM_PROTOCOLS: HidePopup()
*popup.buttonForm.translations: #override\n\
  <KeyPress>: SendRFBEvent() HidePopup()


!
! Popup buttons
!

*popupButtonCount: 16

*popup*button1.label: Dismiss menu
*popup*button1.translations: #override\n\
  <Btn1Down>,<Btn1Up>: HidePopup()

*popup*button2.label: Close viewer
*popup*button2.translations: #override\n\
  <Btn1Down>,<Btn1Up>: Quit()

*popup*button3.label: Request refresh (Ctrl-Alt-Shift-R)
*popup*button3.translations: #override\n\
  <Btn1Down>,<Btn1Up>: SendRFBEvent(fbupdate) HidePopup()

*popup*button4.label: Request lossless refresh (Ctrl-Alt-Shift-L)
*popup*button4.translations: #override\n\
  <Btn1Down>,<Btn1Up>: LosslessRefresh() HidePopup()

*popup*button5.label: Full screen (Ctrl-Alt-Shift-F)
*popup*button5.type: toggle
*popup*button5.translations: #override\n\
  <Visible>: SetFullScreenState()\n\
  <Btn1Down>,<Btn1Up>: ToggleFullScreen() HidePopup()

*popup*button6.label: Grab keyboard (Ctrl-Alt-Shift-G)
*popup*button6.type: toggle
*popup*button6.translations: #override\n\
  <Visible>: SetGrabKeyboardState()\n\
  <Btn1Down>,<Btn1Up>: ToggleGrabKeyboard() HidePopup()

*popup*button7.label: Send F8
*popup*button7.translations: #override\n\
  <Btn1Down>,<Btn1Up>: SendRFBEvent(key,F8) HidePopup()

*popup*button8.label: Send Ctrl-Alt-Del
*popup*button8.translations: #override\n\
  <Btn1Down>,<Btn1Up>: SendRFBEvent(keydown,Control_L)\
                       SendRFBEvent(keydown,Alt_L)\
                       SendRFBEvent(key,Delete)\
                       SendRFBEvent(keyup,Alt_L)\
                       SendRFBEvent(keyup,Control_L)\
                       HidePopup()

*popup*button9.label: View only
*popup*button9.type: toggle
*popup*button9.translations: #override\n\
  <Visible>: SetViewOnlyState()\n\
  <Btn1Down>,<Btn1Up>: ToggleViewOnly() HidePopup()

*popup*button10.label: Clipboard: local -> remote
*popup*button10.translations: #override\n\
  <Btn1Down>,<Btn1Up>: SelectionToVNC(always) HidePopup()

*popup*button11.label: Clipboard: local <- remote
*popup*button11.translations: #override\n\
  <Btn1Down>,<Btn1Up>: SelectionFromVNC(always) HidePopup()

*popup*button12.label: Encoding method: Tight + Perceptually Lossless JPEG (LAN)
*popup*button12.translations: #override\n\
  <Btn1Down>,<Btn1Up>: QualHigh()

*popup*button13.label: Encoding method: Tight + Medium-Quality JPEG
*popup*button13.translations: #override\n\
  <Btn1Down>,<Btn1Up>: QualMed()

*popup*button14.label: Encoding method: Tight + Low-Quality JPEG (WAN)
*popup*button14.translations: #override\n\
  <Btn1Down>,<Btn1Up>: QualLow()

*popup*button15.label: Encoding method: Lossless Tight (Gigabit)
*popup*button15.translations: #override\n\
  <Btn1Down>,<Btn1Up>: QualLossless()

*popup*button16.label: Encoding method: Lossless Tight + Zlib (WAN)
*popup*button16.translations: #override\n\
  <Btn1Down>,<Btn1Up>: QualLosslessWAN()

