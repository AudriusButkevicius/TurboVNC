X11 TurboVNC Viewer
===================

The X11 TurboVNC Viewer is written using Xt (X Toolkit Intrinsics), and thus
the behavior of the application can be heavily customized through the use of X
resources.

You can set X resources by any of the usual means:  in an app-defaults file,
such as .Xresources, or on the command line with the '-xrm' option
(e.g. vncviewer -xrm '*passwordDialog: true'.)

The file Tvncviewer contains the same resource settings as the "fallback
resources" embedded in the executable.  You can copy this file into
/usr/lib/X11/app-defaults (or equivalent) and edit it for site-wide
customizations.  You can also place it in your home directory end edit it for
per-user customizations.

The application resources are described in the vncviewer man page.


How to customize the popup window
---------------------------------

Set the number of buttons with the popupButtonCount resource, e.g.:

  *popupButtonCount: 2

For each button, set the label, and override the button press translations,
e.g.:

  *popup*button1.label: Send left mouse button click at 100,100
  *popup*button1.translations: #override\n\
    <Btn1Down>,<Btn1Up>: SendRFBEvent(ptr,100,100,1)\
                         SendRFBEvent(ptr,100,100,0)

  *popup*button2.label: Send "Think thin!"
  *popup*button2.translations: #override\n\
    <Btn1Down>,<Btn1Up>:\
      SendRFBEvent(key,T) SendRFBEvent(key,h) SendRFBEvent(key,i)\
      SendRFBEvent(key,n) SendRFBEvent(key,k) SendRFBEvent(key,space)\
      SendRFBEvent(key,t) SendRFBEvent(key,h) SendRFBEvent(key,i)\
      SendRFBEvent(key,n) SendRFBEvent(key,exclam)


How to customize the desktop window
-----------------------------------

You can override translations on the desktop window.  For example, to change
the key used to bring up to popup window from F8 to Escape, and to make F12
switch in and out of full-screen mode:

  *desktop.translations: #override\n\
    <Key>F8: SendRFBEvent()\n\
    <Key>Escape: ShowPopup()\n\
    <Key>F12: ToggleFullScreen()



Actions
-------

These are the actions that you can use in translations:

  ShowPopup()
  HidePopup()

    Show and hide the popup window, respectively.  


  SendRFBEvent()

    Send an RFB event to the VNC server.  With no argument, this simply sends
    the RFB equivalent of the X event that caused the action.  With arguments,
    this generates events depending on the arguments:

      SendRFBEvent(fbupdate)

      SendRFBEvent(keydown,<keysym>)
      SendRFBEvent(keyup,<keysym>)
      SendRFBEvent(key,<keysym>)    (short for keydown followed by keyup)

      SendRFBEvent(ptr,<x>,<y>,<buttonMask>)
      SendRFBEvent(ptr,<buttonMask>)

    where

      <keysym> is the string representing an X keysym.  The best way to find
      these is to use "xev" or to look in /usr/include/X11/keysymdef.h and
      strip off the "XK_".

      <x> and <y> are the position of the pointer event.  If not specified,
      SendRFBEvent() uses the position of the X event that caused the action.

      <buttonMask> is a bit mask representing buttons 1 to 8 with bits 0 to
      7, respectively.  An unset bit means that the corresponding button is up.
      A set bit means that the corresponding button is down (pressed.)  So,
      0 means that no buttons are pressed, 1 means that button 1 is pressed, 5
      means that buttons 1 and 3 are pressed, etc.


  SelectionToVNC()

    Send the contents of the local clipboard or X selection to the VNC server.
    This is usually invoked when the mouse enters the viewer window.  With no
    argument or an argument of "new", this is only done if the local clipboard
    or selection hasn't already been sent.  With an argument of "always", the
    local clipboard/selection is sent each time.


  SelectionFromVNC()

    Set the local clipboard and X selection contents to the contents of the VNC
    server's clipboard.  This is usually invoked when the mouse leaves the
    viewer window.  With no argument or an argument of "new", this is only done
    if the server's clipboard has changed.  With an argument of "always", the
    local clipboard/selection is set each time.


  Quit()

    Quit the VNC viewer.


  RunCommand(arg1,...)

    Run a command or program.  The first argument is the name of the
    command.  Additional arguments are arguments to pass to the command.
    Example:
  
      RunCommand(emacs, /home/joe/TODO)


  Pause()

    Pause for a given number of milliseconds (100 by default).  This is
    sometimes useful to space out events generated by SendRFBEvent.


  ToggleFullScreen()

    Toggle in and out of full-screen mode.


  SetFullScreenState()

    Sets the "state" resource of a toggle widget to reflect whether we're in
    full-screen mode.


  ServerDialogDone()
  PasswordDialogDone()

    Used to tell the dialog boxes that entry has finished.  Usually invoked by
    pressing the return key.

  UserPwdDialogDone()
  UserPwdNextField()
  UserPwdSetFocus()
  Nothing()

    Used with the User/Password dialog box.

  Other TurboVNC-specific actions are available.  See the default resource
  file (Tvncviewer) for examples of their use.

Widget hierarchy
----------------

Main window:

  Tvncviewer  vncviewer
    Form       form
      Viewport   viewport
        Core       desktop


Server dialog box:

    TransientShell  serverDialog
      Dialog          dialog


Password dialog box:

    TransientShell  passwordDialog
      Dialog          dialog

User/Password dialog box:

    TransientShell  userPwdDialog
      Form            form
      	Label           userLabel
      	AsciiText       userField
      	Label           pwdLabel
      	AsciiText       pwdField

Popup window:

    TransientShell   popup
      Form             buttonForm
        Command/Toggle   button1
               .            .
               .            .
        Command/Toggle   buttonN
